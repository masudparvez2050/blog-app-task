import { useState } from "react";
import { Link } from "react-router-dom";

export default function Header() {
  const [isSelect, setIsSelect] = useState(1);
  const [isOpen, setIsOpen] = useState(false);

  const handleSelect = (num) => {
    setIsSelect(num);
  };

  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  return (
    <div className=" sticky top-0 z-10">
      <div className="bg-white drop-shadow-md border flex justify-center items-center py-6">
        <div className="flex items-center justify-between mx-4 w-full md:w-[60%] ">
          <div>
            <Link to="/">
              <svg
                width="151"
                height="30"
                viewBox="0 0 151 30"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0)">
                  <path
                    d="M150.836 19.6602H148.03V22.5498H150.836V19.6602Z"
                    fill="#092138"
                  ></path>
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M145.878 20.714L144.338 19.1956C143.952 19.5865 143.516 19.9239 143.04 20.199C142.589 20.4369 142.09 20.5699 141.581 20.5882C141.071 20.6064 140.564 20.5094 140.097 20.3043C139.698 20.1208 139.339 19.8593 139.042 19.5351C138.742 19.2025 138.51 18.8153 138.356 18.3946C138.191 17.942 138.109 17.4633 138.114 16.9816C138.11 16.5102 138.192 16.0421 138.356 15.6003C138.509 15.1867 138.736 14.8043 139.025 14.4715C139.304 14.1489 139.645 13.8866 140.029 13.7006C140.431 13.5096 140.871 13.4124 141.316 13.4164C141.887 13.3977 142.451 13.5322 142.952 13.806C143.414 14.0817 143.836 14.4193 144.206 14.8093L145.79 13.0986C145.272 12.5257 144.653 12.0539 143.964 11.7073C143.268 11.3562 142.392 11.18 141.336 11.1789C140.563 11.1725 139.797 11.3225 139.083 11.62C138.37 11.9174 137.724 12.3561 137.184 12.9097C136.666 13.4462 136.255 14.076 135.972 14.7659C135.678 15.4819 135.529 16.2493 135.535 17.0234C135.528 17.7943 135.677 18.5587 135.972 19.2709C136.255 19.9558 136.666 20.5802 137.184 21.1103C137.71 21.6419 138.335 22.0647 139.024 22.3545C139.751 22.6618 140.534 22.816 141.323 22.8077C142.406 22.8077 143.297 22.6142 143.999 22.2274C144.707 21.838 145.342 21.3288 145.877 20.7224"
                    fill="#092138"
                  ></path>
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M125.644 16.2775C125.644 15.4079 125.873 14.729 126.335 14.2474C126.566 14.0059 126.846 13.8162 127.156 13.6908C127.467 13.5655 127.8 13.5072 128.134 13.5199C128.887 13.5199 129.469 13.7557 129.881 14.2273C130.293 14.6939 130.497 15.3661 130.497 16.234V22.55H133.072V15.4614C133.072 14.1515 132.728 13.1102 132.04 12.3377C131.353 11.5651 130.378 11.1782 129.116 11.1771C128.72 11.1717 128.325 11.2252 127.945 11.336C127.611 11.439 127.293 11.587 126.999 11.7758C126.72 11.9504 126.466 12.1607 126.243 12.4012C126.023 12.6374 125.822 12.8901 125.641 13.1571V11.4096H123.077V22.55H125.651L125.644 16.2775Z"
                    fill="#092138"
                  ></path>
                  <path
                    d="M119.4 7.78027H116.826V22.5495H119.4V7.78027Z"
                    fill="#092138"
                  ></path>
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M99.2508 17.8883H107.445C107.458 17.7612 107.47 17.6408 107.476 17.5288C107.483 17.4167 107.487 17.303 107.487 17.1943C107.491 16.4154 107.378 15.6403 107.152 14.895C106.944 14.1965 106.604 13.5446 106.149 12.9753C105.696 12.4196 105.125 11.9727 104.477 11.6676C103.747 11.3298 102.949 11.1633 102.145 11.181C101.389 11.1716 100.639 11.3304 99.9514 11.6458C99.3013 11.9471 98.7171 12.3739 98.2324 12.9017C97.7412 13.4365 97.3579 14.061 97.1036 14.7412C96.8326 15.4627 96.6965 16.2279 96.7023 16.9987C96.6908 17.8112 96.8415 18.6179 97.1454 19.3716C97.4191 20.0525 97.8286 20.6706 98.349 21.1881C98.8694 21.7056 99.4897 22.1117 100.172 22.3816C100.887 22.6659 101.65 22.809 102.42 22.803C103.335 22.8278 104.244 22.6328 105.068 22.2345C105.8 21.8603 106.448 21.3435 106.976 20.7144L105.471 19.385C105.07 19.7869 104.606 20.1217 104.099 20.3766C103.583 20.6121 103.02 20.7265 102.453 20.7111C101.685 20.7325 100.936 20.4739 100.344 19.9836C99.7669 19.4987 99.4013 18.7991 99.2474 17.885L99.2508 17.8883ZM99.2257 16.196C99.3026 15.4071 99.6329 14.6644 100.167 14.0789C100.417 13.8131 100.72 13.6032 101.057 13.4631C101.393 13.323 101.756 13.2559 102.12 13.2662C102.509 13.2597 102.893 13.3391 103.247 13.4987C103.57 13.6478 103.861 13.8592 104.102 14.1208C104.349 14.3921 104.542 14.7075 104.672 15.0505C104.815 15.4192 104.908 15.8057 104.946 16.1993L99.2257 16.196Z"
                    fill="#092138"
                  ></path>
                  <path
                    d="M93.9969 7.14844H91.4233V22.5498H93.9969V7.14844Z"
                    fill="#092138"
                  ></path>
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M88.0889 22.5498V7.14844H85.5153V13.1401C85.0894 12.6025 84.5775 12.1391 84.0002 11.7688C83.3949 11.3742 82.639 11.1769 81.7276 11.1769C81.0669 11.177 80.4126 11.306 79.8012 11.5565C79.176 11.8109 78.6127 12.1964 78.149 12.6869C77.6519 13.2149 77.2623 13.8345 77.0019 14.5113C76.7016 15.2989 76.5551 16.1368 76.5704 16.9795C76.555 17.8232 76.7049 18.6618 77.0119 19.4478C77.28 20.1235 77.6725 20.7429 78.1691 21.2739C78.6305 21.7616 79.1902 22.1458 79.8112 22.401C80.4186 22.6534 81.0699 22.783 81.7276 22.7822C82.5256 22.8096 83.3133 22.5964 83.9885 22.1702C84.5845 21.7769 85.1023 21.2762 85.5153 20.6936V22.5498H88.0889ZM85.5571 16.9795C85.5657 17.4842 85.476 17.9858 85.2929 18.4561C85.1312 18.8729 84.893 19.2558 84.5905 19.5849C84.156 20.0519 83.5873 20.3726 82.9628 20.5029C82.3384 20.6332 81.6889 20.5666 81.1039 20.3123C80.7195 20.1442 80.3727 19.9008 80.0838 19.5966C79.7801 19.2702 79.5447 18.8865 79.3915 18.4678C79.2171 17.9913 79.1316 17.4869 79.139 16.9795C79.1309 16.4667 79.2164 15.9567 79.3915 15.4745C79.5447 15.0559 79.7801 14.6721 80.0838 14.3458C80.3717 14.0424 80.7189 13.8017 81.1039 13.6384C81.4939 13.4763 81.9123 13.3939 82.3347 13.3959C82.7571 13.3967 83.1748 13.4842 83.562 13.653C83.9492 13.8219 84.2976 14.0685 84.5855 14.3775C84.888 14.7067 85.1262 15.0895 85.2878 15.5063C85.4721 15.9753 85.5635 16.4757 85.5571 16.9795V16.9795Z"
                    fill="#092138"
                  ></path>
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M74.5436 16.9799C74.5491 16.2053 74.3984 15.4375 74.1004 14.7224C73.8136 14.0342 73.3943 13.4092 72.8663 12.8829C72.3286 12.3483 71.6903 11.9255 70.9884 11.6388C70.2357 11.3302 69.4289 11.1756 68.6155 11.1839C67.8006 11.1758 66.9926 11.334 66.2409 11.6488C65.5402 11.9422 64.903 12.3687 64.3646 12.9047C63.8329 13.4367 63.4098 14.0672 63.1188 14.7608C62.8157 15.4623 62.6555 16.2173 62.6478 16.9814C62.64 17.7456 62.7848 18.5036 63.0737 19.2111C63.3626 19.9186 63.7897 20.5613 64.3301 21.1016C64.8705 21.642 65.5133 22.069 66.2208 22.3578C67.7418 22.9648 69.4383 22.9612 70.9566 22.3478C72.3699 21.7683 73.4965 20.6531 74.0904 19.2458C74.3949 18.5324 74.5491 17.7639 74.5436 16.9883V16.9799ZM71.97 17.0301C71.974 17.5011 71.8953 17.9692 71.7376 18.413C71.5916 18.8299 71.3642 19.2136 71.0687 19.5418C70.7584 19.8826 70.3788 20.153 69.9554 20.335C69.532 20.517 69.0746 20.6063 68.6138 20.597C68.1469 20.6013 67.6846 20.5037 67.2593 20.311C66.8563 20.1269 66.4932 19.8656 66.1907 19.5418C65.8842 19.2081 65.6466 18.8171 65.4917 18.3913C65.3217 17.9432 65.2355 17.4676 65.2376 16.9883C65.2335 16.5178 65.3122 16.0502 65.47 15.607C65.6273 15.1793 65.8705 14.7883 66.1848 14.4583C66.499 14.1282 66.8776 13.8661 67.2971 13.6881C67.7166 13.5101 68.1681 13.4199 68.6238 13.4233C69.0795 13.4266 69.5297 13.5232 69.9466 13.7073C70.3515 13.8933 70.7149 14.1589 71.0152 14.4883C71.3189 14.8244 71.5565 15.2147 71.7158 15.6388C71.8856 16.08 71.9717 16.549 71.97 17.0217V17.0301Z"
                    fill="#092138"
                  ></path>
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M60.6822 16.9802C60.6955 15.8344 60.3635 14.7111 59.7294 13.7567C59.0953 12.8022 58.1885 12.0608 57.1271 11.629C56.3744 11.3205 55.5676 11.1658 54.7542 11.1742C53.9392 11.1657 53.1312 11.3239 52.3796 11.639C51.6783 11.9338 51.0407 12.3614 50.5017 12.8982C49.971 13.4308 49.5485 14.0612 49.2575 14.7544C48.9533 15.4563 48.7923 16.2118 48.784 16.9767C48.7757 17.7416 48.9203 18.5004 49.2093 19.2087C49.4982 19.917 49.9257 20.5604 50.4667 21.1012C51.0076 21.642 51.6512 22.0694 52.3595 22.3581C53.8804 22.9651 55.577 22.9615 57.0953 22.3481C58.5078 21.7673 59.634 20.6526 60.2291 19.2461C60.5335 18.5327 60.6878 17.7642 60.6822 16.9885V16.9802ZM58.1087 17.0303C58.1118 17.5013 58.0332 17.9692 57.8762 18.4133C57.73 18.83 57.5026 19.2136 57.2073 19.542C56.9105 19.8678 56.5503 20.1296 56.1488 20.3113C55.7103 20.5071 55.2343 20.6046 54.7542 20.5972C54.2872 20.6019 53.8249 20.5043 53.3996 20.3113C52.9966 20.1272 52.6336 19.8658 52.3311 19.542C52.0245 19.2084 51.787 18.8174 51.6321 18.3916C51.4613 17.9436 51.3751 17.4679 51.3779 16.9885C51.3738 16.518 51.4525 16.0505 51.6104 15.6073C51.8 15.0697 52.126 14.5905 52.5563 14.2166C52.9866 13.8428 53.5066 13.5869 54.0654 13.4742C54.6242 13.3615 55.2027 13.3957 55.7444 13.5735C56.286 13.7513 56.7722 14.0666 57.1555 14.4885C57.4592 14.8243 57.6964 15.2147 57.8545 15.639C58.0242 16.0803 58.1104 16.5492 58.1087 17.022V17.0303Z"
                    fill="#092138"
                  ></path>
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M46.5669 15.1437C46.5755 14.1447 46.3815 13.1543 45.9967 12.2323C45.6283 11.3477 45.0786 10.5502 44.383 9.89117C43.6637 9.21526 42.8181 8.68791 41.8947 8.33933C40.8792 7.95838 39.8019 7.769 38.7174 7.78079H33.2124V22.55H38.7191C39.8047 22.5622 40.8827 22.3687 41.8964 21.9798C42.819 21.6257 43.664 21.0959 44.3846 20.4196C45.0816 19.7571 45.6314 18.9555 45.9984 18.0668C46.3828 17.1406 46.5767 16.1464 46.5686 15.1437H46.5669ZM43.8479 15.1872C43.8557 15.8785 43.7302 16.565 43.4783 17.2089C43.2442 17.8038 42.8908 18.3444 42.4398 18.7975C41.9799 19.254 41.4289 19.6084 40.8228 19.8377C40.1463 20.0919 39.4283 20.2172 38.7057 20.2072H35.786V10.1236H38.704C39.4275 10.1135 40.1462 10.2424 40.8211 10.5032C41.4288 10.7395 41.9798 11.1014 42.4382 11.5651C42.8882 12.0218 43.242 12.5643 43.4783 13.1604C43.7302 13.806 43.8551 14.4942 43.8462 15.1872H43.8479Z"
                    fill="#092138"
                  ></path>
                  <path
                    d="M12.0015 12H6.00146V18H12.0015V12Z"
                    fill="#F48039"
                  ></path>
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M6 24V18H0V30H6H18.9565V24H6Z"
                    fill="#F48039"
                  ></path>
                  <path d="M18.9565 0H0V6H18.9565V0Z" fill="#F48039"></path>
                  <path
                    d="M24.9565 6H18.9565V24H24.9565V6Z"
                    fill="#F48039"
                  ></path>
                </g>
                <defs>
                  <clipPath id="clip0">
                    <rect width="150.836" height="30" fill="white"></rect>
                  </clipPath>
                </defs>
              </svg>
            </Link>
          </div>
          <div className="hidden md:block">
            <ul className=" flex space-x-4 justify-center font-semibold text-slate-800  ">
              <li
                onClick={() => handleSelect(1)}
                className={
                  isSelect === 1
                    ? "text-[#f37f39] transition-all duration-200 "
                    : "hover:text-[#f37f39]  transition-all duration-200 "
                }
              >
                <Link to="/">Home</Link>
              </li>
              <li
                onClick={() => handleSelect(2)}
                className={
                  isSelect === 2
                    ? "text-[#f37f39] transition-all duration-200 "
                    : "hover:text-[#f37f39]  transition-all duration-200 "
                }
              >
                <Link to="/blogs">Blogs</Link>
              </li>
              <li
                onClick={() => handleSelect(3)}
                className={
                  isSelect === 3
                    ? "text-[#f37f39] transition-all duration-200 "
                    : "hover:text-[#f37f39]  transition-all duration-200 "
                }
              >
                <Link to="/favorites">Favorite Blogs</Link>
              </li>
              <li
                onClick={() => handleSelect(4)}
                className={
                  isSelect === 4
                    ? "text-[#f37f39] transition-all duration-200 "
                    : "hover:text-[#f37f39]  transition-all duration-200 "
                }
              >
                <Link to="/about">About</Link>
              </li>
            </ul>
          </div>

          {/* -------------------------------  */}
          <div className="md:hidden mx-2 px-2 mt-2 bg-white rounded-md transition-all duration-500">
            <button
              onClick={toggleMenu}
              className="focus:outline-none transition-all duration-500"
            >
              <svg
                className="h-8 w-8 transition-all duration-500"
                fill="none"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                {isOpen ? (
                  <path d="M6 18L18 6M6 6l12 12"></path>
                ) : (
                  <path d="M4 7h22M4 15h22M4 23h22"></path>
                )}
              </svg>
            </button>
          </div>
        </div>
      </div>
      {/* -------for responsive menu---------- */}
      {isOpen ? (
        <div className="md:hidden bg-white shadow-md">
          <ul className="flex space-x-4 justify-center font-semibold text-slate-800 border py-4">
            <li
              onClick={() => handleSelect(1)}
              className={
                isSelect === 1
                  ? "text-[#f37f39] transition-all duration-200 "
                  : "hover:text-[#f37f39]  transition-all duration-200 "
              }
            >
              <Link to="/">Home</Link>
            </li>
            <li
              onClick={() => handleSelect(2)}
              className={
                isSelect === 2
                  ? "text-[#f37f39] transition-all duration-200 "
                  : "hover:text-[#f37f39]  transition-all duration-200 "
              }
            >
              <Link to="/blogs">Blogs</Link>
            </li>
            <li
              onClick={() => handleSelect(3)}
              className={
                isSelect === 3
                  ? "text-[#f37f39] transition-all duration-200 "
                  : "hover:text-[#f37f39]  transition-all duration-200 "
              }
            >
              <Link to="/favorites">Favorite Blogs</Link>
            </li>
            <li
              onClick={() => handleSelect(4)}
              className={
                isSelect === 4
                  ? "text-[#f37f39] transition-all duration-200 "
                  : "hover:text-[#f37f39]  transition-all duration-200 "
              }
            >
              <Link to="/about">About</Link>
            </li>
          </ul>
        </div>
      ) : (
        ""
      )}
    </div>
  );
}
